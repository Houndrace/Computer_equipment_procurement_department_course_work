<UserControl x:Class="PurchasingDepartment.CustomControls.CustomTitleBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PurchasingDepartment.CustomControls"
             xmlns:comcomands="clr-namespace:PurchasingDepartment.CommonComands"
             xmlns:view="clr-namespace:PurchasingDepartment.Views"
             mc:Ignorable="d" 
             x:Name="TitleBar"
             d:DesignHeight="450" d:DesignWidth="800" 
             VerticalAlignment="Top"
             MouseMove="TitleBar_MouseMove" 
             MouseLeftButtonDown="TitleBar_MouseLeftButtonDown"
             MouseLeftButtonUp="TitleBar_MouseLeftButtonUp">
    <!--Title bar resourses-->
    <UserControl.Resources>
        <Style x:Key="MinimizeButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent"
                              Width="25"
                              Height="35">
                            <Image x:Name="ButtonImage" 
                                   Source="/PurchasingDepartment;component/Images/MinimizeInactive.png"
                                   MaxWidth="8"
                                   MaxHeight="3"
                                   Margin="15 24 0 8"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonImage" Property="Source" Value="/PurchasingDepartment;component/Images/MinimizeActive.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpandButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent"
                              Width="30"
                              Height="35">
                            <Image x:Name="ButtonImage" 
                                   Source="/PurchasingDepartment;component/Images/ExpandInactive.png"
                                   MaxWidth="10"
                                   MaxHeight="9"
                                   Margin="0 18 0 8"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/PurchasingDepartment;component/Images/ExpandActive.png"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                                <Setter TargetName="ButtonImage" Property="Source" Value="/PurchasingDepartment;component/Images/ExpandedInactive.png"/>
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ButtonImage" Property="Source" Value="/PurchasingDepartment;component/Images/ExpandedActive.png"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CloseButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent"
                              Width="30"
                              Height="35">
                            <Image x:Name="ButtonImage" 
                                   Source="/PurchasingDepartment;component/Images/CloseInactive.png"
                                   MaxWidth="9"
                                   MaxHeight="9"
                                   Margin="2 18 15 8"/>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonImage" Property="Source" Value="/PurchasingDepartment;component/Images/CloseActive.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <!--Interface-->
    <Grid Name="grdTitleBar"
          Height="35" 
          Background="Transparent">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <!--Будет дополняться-->
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Grid.Column="1">
            <!--Перетянуть отсюда команду-->
            <Button Name="MinimizeButton"
                    Style="{DynamicResource MinimizeButtonStyle}"
                    Click="MinimizeButton_Click"/>

            <Button Name="ExpandButton"
                    Style="{DynamicResource ExpandButtonStyle}"
                    Click="ExpandButton_Click"/>

            <Button Name="CloseButton"
                    Style="{DynamicResource CloseButtonStyle}"
                    Click="CloseButton_Click"/>
        </StackPanel>
    </Grid>
</UserControl>
